stages: 
  - build
  - test
  - deploy

# build-job:
#   stage: build
#   environment: dev
#   tags:
#     - build
#     - deploy 
#   image: docker:20.10.16
#   services:
#     - docker:20.10.16-dind
#   variables:
#     DOCKER_HOST: tcp://docker:2375
#     DOCKER_TLS_CERTDIR: ""
#   before_script:
#     - docker login -u $REGISTRY_USER -p $REGISTRY_PASS
#   script:
#     - echo "Building the image..."
#     - docker build -t api .


unit-test-job:
  image: python:3.11-bookworm
  stage: test
  environment: dev
  tags:
    - build
    - deploy 
  before_script: 
    - apt-get update && apt-get install make
  script:
    - make venv && make test


sonarqube-check:
  tags:
    - build
    - deploy
  stage: test
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  before_script: 
    - apt-get update && apt-get install make
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - make venv && make test && sonar-scanner -X -Dsonar.sources=. -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_LOGIN 
  allow_failure: true



lint-test-job:
  #image: python:3.11-bookworm
  stage: test
  environment: dev
  tags:
    - build
    - deploy 
  before_script: 
    - apt-get update && apt-get install make
  script: 
    # - make venv && make lint-fix
    - echo "Lint initiated"
    - echo "lint complete"

deploy-job:
  stage: deploy
  environment: dev
  tags:
    - build
    - deploy 
  script:
    - echo "Deploying application"
    - echo "Application deployed successfully"
